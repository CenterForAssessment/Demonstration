
Started abcSGP Friday September 22 23:56:27 2017


	abcSGP(
		 sgp_object = Demonstration_Data_LONG
		sgp.target.scale.scores = TRUE
		calculate.simex = list(state = "DEMO", lambda = seq(0, 2, 0.5), simulation.iterations = 75, extrapolation = "linear", save.matrices = TRUE)
		calculate.simex.baseline = list(state = "DEMO", lambda = seq(0, 2, 0.5), simulation.iterations = 75, extrapolation = "linear", save.matrices = TRUE)
		parallel.config = list(BACKEND = "PARALLEL", WORKERS = list(TAUS = 20, SIMEX = 20, PROJECTIONS = 10, LAGGED_PROJECTIONS = 10, SGP_SCALE_SCORE_TARGETS = 10, SUMMARY = 20, GA_PLOTS = 4, SG_PLOTS = 1))
		sgPlot.demo.report = TRUE )


Started prepareSGP Friday September 22 23:56:27 2017


	prepareSGP(
		 data = sgp_object
		data_supplementary = data_supplementary
		state = state
		var.names = prepareSGP.var.names
		create.additional.variables = prepareSGP.create.additional.variables
		fix.duplicates = fix.duplicates )

Finished prepareSGP Friday September 22 23:56:27 2017 in 0.38 Seconds 


Started analyzeSGP Friday September 22 23:56:27 2017


	analyzeSGP(
		 sgp_object = sgp_object
		state = state
		years = years
		content_areas = content_areas
		grades = grades
		sgp.percentiles = sgp.percentiles
		sgp.projections = sgp.projections
		sgp.projections.lagged = sgp.projections.lagged
		sgp.percentiles.baseline = sgp.percentiles.baseline
		sgp.projections.baseline = sgp.projections.baseline
		sgp.projections.lagged.baseline = sgp.projections.lagged.baseline
		sgp.minimum.default.panel.years = sgp.minimum.default.panel.years
		sgp.use.my.coefficient.matrices = sgp.use.my.coefficient.matrices
		sgp.test.cohort.size = sgp.test.cohort.size
		return.sgp.test.results = return.sgp.test.results
		simulate.sgps = simulate.sgps
		calculate.simex = calculate.simex
		calculate.simex.baseline = calculate.simex.baseline
		goodness.of.fit.print = goodness.of.fit.print
		sgp.config = sgp.config
		parallel.config = parallel.config
		verbose.output = verbose.output
		get.cohort.data.info = get.cohort.data.info
		sgp.sqlite = sgp.sqlite
		sgp.percentiles.equated = sgp.percentiles.equated
		sgp.percentiles.equating.method = sgp.percentiles.equating.method
		sgp.percentiles.calculate.sgps = sgp.percentiles.calculate.sgps
		SGPt = SGPt
		fix.duplicates = fix.duplicates )

